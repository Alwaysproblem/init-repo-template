build_whl:
  stage: build
  image:
    name: python:3.8
    pull_policy: [always, if-not-present]

  rules:
    - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+(-rc\d+)?$/'

  needs:
    - job: pytest-for-release
      artifacts: false

  before_script:
    - python -V
    - pip install -U pip
    - pip install wheel==0.42.0 setuptools==69.1.0
    - mkdir -p release build

  script:
    - echo "$CI_COMMIT_TAG" > VERSION
    - python -m pip wheel --wheel-dir=./build/ --no-deps ./
    - ls -l build
    - mv build/rperf-*.whl release/
    - rm -rf build

  artifacts:
    paths:
      - release/

  interruptible: false

# release_note:
#   stage: build
#   image: alpine:latest
#   rules:
#     - if: '$CI_COMMIT_TAG =~ /^v?\d+\.\d+\.\d+(-rc\d+)?$/'
#   script:
#     - apk add curl jq
#     - 'curl -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$CI_API_V4_URL/projects/$CI_PROJECT_ID/repository/changelog?version=$CI_COMMIT_TAG" | jq -r .notes > release_notes.md'
#   artifacts:
#     paths:
#       - release_notes.md
#   interruptible: false

upload_release_whl:
  stage: release

  image:
    name: python:3.8
    pull_policy: [always, if-not-present]

  rules:
    - if: $CI_COMMIT_TAG =~ '/^v?\d+\.\d+\.\d+(-rc\d+)?$/'

  needs:
    - job: build_whl
      artifacts: true

  before_script:
    - python -V
    - pip install -U pip
    - pip install wheel==0.42.0 setuptools==69.1.0 twine==5.0.0

  script:
    - python .ci/scripts/generate_pypirc.py -r "$CI_API_V4_URL/projects/223/packages/pypi" -u gitlab-ci-token -p $PRE_COMMIT_ACCESS_TOKEN -o /tmp/.pypirc
    - ls -l release
    - cat /tmp/.pypirc
    - python -m twine upload --verbose --repository gitlab release/*.whl --config-file /tmp/.pypirc
    - cd release
    - echo "WHL_NAME=$(echo rperf-*.whl)" >> $CI_PROJECT_DIR/.whl_name.env

  artifacts:
    reports:
      dotenv: .whl_name.env

  interruptible: false

release_whl:
  stage: release

  image: registry.gitlab.com/gitlab-org/release-cli:latest

  rules:
    - if: $CI_COMMIT_TAG =~ '/^v?\d+\.\d+\.\d+(-rc\d+)?$/'

  needs:
    - job: upload_release_whl
      artifacts: true

  script:
    - WHL_VERSION=${CI_COMMIT_TAG#v}
    - 'echo "Creating release, version: $WHL_VERSION"'

  release:
    name: "Release $CI_COMMIT_TAG"
    description: "Release $CI_COMMIT_TAG"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_SHA"
    assets:
      links:
        - name: "${WHL_NAME}"
          url: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi/simple/rperf/"

  interruptible: false
